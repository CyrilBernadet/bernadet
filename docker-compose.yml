version: '3'
volumes:
  postgres_data:
    driver: local
services:
  back:
    container_name: back
    hostname: backend
    build: ./back
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
    expose:
      - 8080
    env_file:
      ./backend.env
    depends_on:
      - postgres
      - keycloak
    networks:
    - bernadet-network
  front:
    container_name: front
    build: ./front
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`bernadet.ddns.net`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=mytlschallenge" 
      - "traefik.http.routers.front.service=front"
      - "traefik.http.services.front.loadbalancer.server.port=8080"
    expose:
      - 8080
    networks:
      - bernadet-network
    depends_on:
      - back
  postgres:
    image: postgres
    hostname: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - bernadet-network
  keycloak:
    image: quay.io/keycloak/keycloak:legacy
    hostname: keycloak
    command: start --auto-build
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    environment:
      KC_PROXY_ADDRESS_FORWARDING: "true"
      KC_HTTP_RELATIVE_PATH: "/auth"
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: "false"
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
    env_file:
      ./keycloak.env
    depends_on:
      - postgres
    networks:
      - bernadet-network
  # traefik:
  #   image: "traefik:v2.9"
  #   container_name: "traefik"
  #   restart: unless-stopped
  #   command:
  #      - --api.dashboard=true
  #      - --providers.docker=true
  #      - --providers.docker.exposedbydefault=false
  #      - --providers.docker.network=bernadet-network
  #      - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true
  #      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json
  #      - --entrypoints.web.address=:80
  #      - --entrypoints.web.http.redirections.entryPoint.to=websecure
  #      - --entrypoints.web.http.redirections.entryPoint.scheme=https
  #      - --entrypoints.web.http.redirections.entrypoint.permanent=true
  #      - --entrypoints.websecure.address=:443
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - "./letsencrypt:/letsencrypt"
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #   networks:
  #   - bernadet-network
networks:
  bernadet-network: