version: '3'
volumes:
  postgres_data:
      driver: local
services:
  nginx: 
    image: nginx:latest
    container_name: reverse-proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/error.log:/var/log/nginx/error.log
      - ./nginx/cache/:/etc/nginx/cache
    ports:
      - 80:80
      - 443:443
    depends_on:
      compare-it-front:
        condition: service_healthy
  back:
    container_name: back
    hostname: backend
    build: ./back
    ports:
      - '8081:8081'
    env_file:
      ./backend.env
    volumes:
      - ./keys:/usr/java/openjdk-18/jre/lib/security/cacerts
    depends_on:
      - postgres
      - keycloak
  front:
    container_name: front
    build: ./front
    ports:
      - 80:80
  postgres:
    image: postgres
    hostname: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
    - 5432:5432
  keycloak:
    image: quay.io/keycloak/keycloak:legacy
    hostname: keycloak
    volumes:
      - ./keys:/opt/keycloak/conf
    env_file:
      ./keycloak.env
    ports:
      - 8080:8080
      - 8443:8443
    depends_on:
      - postgres
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
